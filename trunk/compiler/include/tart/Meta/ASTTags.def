// Basic
DEFTAG_AST(NONE)
DEFTAG_AST(END)        // End of scope
DEFTAG_AST(ID_DEF)     // Define a new ID (length, text)
DEFTAG_AST(ID_REF)     // Reference a previously defined ID
DEFTAG_AST(QID_DEF)    // Define a new fully-qualified ID (length, text)
DEFTAG_AST(QID_REF)    // Reference a previously defined fully-qualified ID

// Constants
DEFTAG_AST(CONST_NULL)
DEFTAG_AST(CONST_INT)
DEFTAG_AST(CONST_FLOAT)
DEFTAG_AST(CONST_DOUBLE)
DEFTAG_AST(CONST_STRING)
DEFTAG_AST(CONST_CHAR)
DEFTAG_AST(CONST_BOOL_FALSE)
DEFTAG_AST(CONST_BOOL_TRUE)
DEFTAG_AST(ARRAY_LITERAL)

// Special forms
DEFTAG_AST(CALL)
DEFTAG_AST(KEYWORD_ARG)
DEFTAG_AST(MEMBER_REF)
DEFTAG_AST(SPECIALIZE)
DEFTAG_AST(SUPER)
DEFTAG_AST(ANONFN)

// Unary ops
DEFTAG_AST(NEGATE)
DEFTAG_AST(LOGICAL_NOT)
DEFTAG_AST(COMPLEMENT)

// Binary ops
DEFTAG_AST(ASSIGN)
DEFTAG_AST(ASSIGN_ADD)
DEFTAG_AST(ASSIGN_SUB)
DEFTAG_AST(ASSIGN_MUL)
DEFTAG_AST(ASSIGN_DIV)
DEFTAG_AST(ASSIGN_MOD)
DEFTAG_AST(ASSIGN_BITAND)
DEFTAG_AST(ASSIGN_BITOR)
DEFTAG_AST(ASSIGN_BITXOR)
DEFTAG_AST(ASSIGN_RSH)
DEFTAG_AST(ASSIGN_LSH)
DEFTAG_AST(POST_ASSIGN)
DEFTAG_AST(LOGICAL_OR)
DEFTAG_AST(LOGICAL_AND)
DEFTAG_AST(IS)
DEFTAG_AST(IS_NOT)
DEFTAG_AST(IN)
DEFTAG_AST(NOT_IN)
DEFTAG_AST(ISA)
DEFTAG_AST(IS_SUBTYPE)
DEFTAG_AST(IS_SUPERTYPE)
DEFTAG_AST(IS_QUALIFIER)
DEFTAG_AST(IS_TYPE_CTOR)

// N-ary ops
DEFTAG_AST(GET_ELEMENT)

// Built-in type definitions
DEFTAG_AST(VOID)
DEFTAG_AST(NIL)
DEFTAG_AST(BOOL)
DEFTAG_AST(CHAR)
DEFTAG_AST(INT8)
DEFTAG_AST(INT16)
DEFTAG_AST(INT32)
DEFTAG_AST(INT64)
DEFTAG_AST(UINT8)
DEFTAG_AST(UINT16)
DEFTAG_AST(UINT32)
DEFTAG_AST(UINT64)
DEFTAG_AST(FLOAT)
DEFTAG_AST(DOUBLE)

// Derived types
DEFTAG_AST(ARRAY)
DEFTAG_AST(ADDRESS)
DEFTAG_AST(NARRAY)
DEFTAG_AST(FLEXARRAY)
DEFTAG_AST(TUPLE)
DEFTAG_AST(UNION)
DEFTAG_AST(FNTYPE)
DEFTAG_AST(TYPEVAR)
DEFTAG_AST(TYPELITERAL)
DEFTAG_AST(MOD_READONLY)
DEFTAG_AST(MOD_MUTABLE)
DEFTAG_AST(MOD_IMMUTABLE)
DEFTAG_AST(MOD_ADOPTED)

// Declarations
DEFTAG_AST(CLASS)
DEFTAG_AST(STRUCT)
DEFTAG_AST(INTERFACE)
DEFTAG_AST(PROTOCOL)
DEFTAG_AST(ENUM)
DEFTAG_AST(TYPEALIAS)
DEFTAG_AST(LET)
DEFTAG_AST(VAR)
DEFTAG_AST(VARLIST)
DEFTAG_AST(FUNCTION)
DEFTAG_AST(PARAM)
DEFTAG_AST(UNDEF)
DEFTAG_AST(OVERRIDE)
DEFTAG_AST(MACRO)
DEFTAG_AST(PROP)
DEFTAG_AST(IDX)
DEFTAG_AST(TEMPLATE)
DEFTAG_AST(NAMESPACE)

// Statements
DEFTAG_AST(BLOCK)
DEFTAG_AST(IF)
DEFTAG_AST(WHILE)
DEFTAG_AST(DO_WHILE)
DEFTAG_AST(FOR)
DEFTAG_AST(FOR_EACH)
DEFTAG_AST(SWITCH)
DEFTAG_AST(CASE)
DEFTAG_AST(MATCH)
DEFTAG_AST(MATCH_AS)
DEFTAG_AST(THROW)
DEFTAG_AST(RETURN)
DEFTAG_AST(YIELD)
DEFTAG_AST(TRY)
DEFTAG_AST(CATCH)
DEFTAG_AST(ELSE)
DEFTAG_AST(FINALLY)
DEFTAG_AST(BREAK)
DEFTAG_AST(CONTINUE)
DEFTAG_AST(EXPR)
DEFTAG_AST(LOCAL_DECL)

// Visibility
DEFTAG_AST(PRIVATE)
DEFTAG_AST(PROTECTED)
DEFTAG_AST(INTERNAL)

// Modifiers
DEFTAG_AST(STATIC)
DEFTAG_AST(ABSTRACT)
DEFTAG_AST(FINAL)
DEFTAG_AST(READONLY)
DEFTAG_AST(VARIADIC)  // Variadic param
DEFTAG_AST(KEYWORDONLY) // Keyword-onlu param
DEFTAG_AST(EXPANDED)  // Expanded tuple param

// Misc tags
DEFTAG_AST(IMPORT)    // Import statement
DEFTAG_AST(IMPORT_NS) // Import namespace statement
DEFTAG_AST(INITVAL)   // Variable initializer
DEFTAG_AST(ATTRIBUTE) // Tags an AST node as an attribute
DEFTAG_AST(CONSTRAINT)// Tags an AST node as a template constraint
DEFTAG_AST(BASETYPE)  // Tags an AST node as a base type
DEFTAG_AST(BODY)      // Function body
DEFTAG_AST(INIT)      // Variable initializer
DEFTAG_AST(TPARAM)    // Template parameter
