import tart.annex.Intrinsic;

/** Description of a compiled module. */
final class Module {
  private {
    var moduleName:String;
    var typeList:TypeDescriptor[];
    var methodList:MethodList;
    
    def construct() {}
  }
  
  /** Fully-qualified name of the module. */
  def name:String { get { return moduleName; } }

  /** Array of types defined in this module. */
  def types:TypeDescriptor[] { get { return typeList; } }

  /** Array of types defined in this module. */
  def methods:MethodList {
    get { return methodList; }
  }
  
  /** Global list of all modules in this compilation unit. */
  //static const var modules:Module[];

  /** Returns a reference to the caller's module. */  
  @Intrinsic static def thisModule() -> Module;

  /** Returns a reference to the module defining 'type'. */  
  //@Intrinsic static def getModule(type:TypeDescriptor) -> Module;
}
