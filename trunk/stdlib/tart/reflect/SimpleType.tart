/** Reflection type class for named types. */
class SimpleType : Type {
  enum SubtypeId : ubyte {
    NONE = 0,
    VOID,
    BOOL,
    CHAR,
    BYTE,
    SHORT,
    INT,
    LONG,
    UBYTE,
    USHORT,
    UINT,
    ULONG,
    FLOAT,
    DOUBLE,

    INT8 = BYTE,
    INT16 = SHORT,
    INT32 = INT,
    INT64 = LONG,
    UINT8 = UBYTE,
    UINT16 = USHORT,
    UINT32 = UINT,
    UINT64 = ULONG,
  }

  private {
    var _subtype:SubtypeId;
    var _name:String;
    var _size:uint;
  }

  /** Size of this type in bits. */
  def subtype:SubtypeId { get { return self._subtype; } }

  /** Fully-qualified name of this type. */
  def name:String { get { return self._name; } }

  /** Size of this type in bytes. */
  def size:uint { get { return self._size; } }

  undef construct();
}
