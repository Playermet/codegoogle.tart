/** Reflection type class for named types. */
class SimpleType : Type {
  enum SubtypeId : ubyte {
    NONE = 0,
    VOID,
    NULL,
    BOOL,
    CHAR,
    INT8,
    INT16,
    INT32,
    INT64,
    UINT8,
    UINT16,
    UINT32,
    UINT64,
    FLOAT,
    DOUBLE,
  }

  private {
    var _subtype:SubtypeId;
    var _name:String;
    //var _scopeName:String;
    var _size:uint32;
  }

  /** Size of this type in bits. */
  final def subtype:SubtypeId { get { return self._subtype; } }

  /** Fully-qualified name of this type. */
  final def name:String { get { return self._name; } }

  /** Size of this type in bytes. */
  final def size:uint32 { get { return self._size; } }

  undef construct();
}
