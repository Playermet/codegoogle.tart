/** Represents a region of memory. */
struct MemoryBuffer[%T] {
  // The object whose allocation contains this region of memory.
  private let base:Object;
  
  // The starting address of the buffer.
  public let begin:NativePointer<[T]>;
  
  // The ending address of the buffer.
  public let end:NativePointer<[T]>;

  /** Construct a memory buffer.
      Parameters:
        base - The heap object containing the memory buffer.
        begin - The beginning of the buffer (points to the first object).
        end - The end of the buffer (points to one past the last object).
  */
  public def construct(base:Object, begin:NativePointer<[T]>, end:NativePointer<[T]>) {
    self.base = base;
    self.begin = begin;
    self.end = end;
  }
}
